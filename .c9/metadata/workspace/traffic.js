{"filter":false,"title":"traffic.js","tooltip":"/traffic.js","undoManager":{"mark":35,"position":35,"stack":[[{"start":{"row":0,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["function trafficLightSimulation(GREEN_TIME, MEAN_ARRIVAL, SEED, SIMTIME) {","    var sim = new Sim.Sim();","    var random = new Sim.Random(SEED);","    var trafficLights = [new Sim.Event(\"North-South Light\"),","                         new Sim.Event(\"East-West Light\")];","    var stats = new Sim.Population(\"Waiting at Intersection\");","","    class LightController extends Sim.Entity {","        constructor(...args) {","          super(...args)","          // the light that is turned on currently","          this.currentLight = 0;","        }","        start() {","            sim.log(trafficLights[this.currentLight].name + \" OFF\"","                    + \", \" + trafficLights[1 - this.currentLight].name + \" ON\");","            sim.log(\"------------------------------------------\");","            // turn off the current light","            trafficLights[this.currentLight].clear();","","            // turn on the other light.","            // Note the true parameter: the event must \"sustain\"","            trafficLights[1 - this.currentLight].fire(true);","","            // update the currentLight variable","            this.currentLight = 1 - this.currentLight;","","            // Repeat every GREEN_TIME interval","            this.setTimer(GREEN_TIME).done(this.start);","        }","    };","","    class Traffic extends Sim.Entity {","        start() {","            this.generateTraffic(\"North\", trafficLights[0]); // traffic for North -> South","            this.generateTraffic(\"South\", trafficLights[0]); // traffic for South -> North","            this.generateTraffic(\"East\", trafficLights[1]); // traffic for East -> West","            this.generateTraffic(\"West\", trafficLights[1]); // traffic for West -> East","        }","        generateTraffic(direction, light) {","            // STATS: record that vehicle as entered the intersection","            stats.enter(this.time());","            sim.log(\"Arrive for \" + direction);","","            // wait on the light.","            // The done() function will be called when the event fires","            // (i.e. the light turns green).","            this.waitEvent(light).done(function () {","                var arrivedAt = this.callbackData;","                // STATS: record that vehicle has left the intersection","                stats.leave(arrivedAt, this.time());","                sim.log(\"Leave for \" + direction + \" (arrived at \" + arrivedAt.toFixed(6) + \")\");","            }).setData(this.time());","","            // Repeat for the next car. Call this function again.","            var nextArrivalAt = random.exponential(1.0 / MEAN_ARRIVAL);","            this.setTimer(nextArrivalAt).done(this.generateTraffic, this, [direction, light]);","        }","    };","","    sim.addEntity(LightController);","    sim.addEntity(Traffic);","","//    Uncomment to display logging information","//    sim.setLogger(function (str) {","//        document.write(str);","//    });","","    // simulate for SIMTIME time","    sim.simulate(SIMTIME);","","    return [stats.durationSeries.average(),","            stats.durationSeries.deviation(),","            stats.sizeSeries.average(),","            stats.sizeSeries.deviation()];","","}",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["","\"use strict\";","","var Sim  = require(\"./src/sim/sim.js\");","",""],"id":5}],[{"start":{"row":85,"column":0},"end":{"row":86,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":86,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["",""],"id":7}],[{"start":{"row":87,"column":0},"end":{"row":87,"column":1},"action":"insert","lines":["m"],"id":8}],[{"start":{"row":87,"column":1},"end":{"row":87,"column":2},"action":"insert","lines":["o"],"id":9}],[{"start":{"row":87,"column":2},"end":{"row":87,"column":3},"action":"insert","lines":["d"],"id":10}],[{"start":{"row":87,"column":3},"end":{"row":87,"column":4},"action":"insert","lines":["u"],"id":11}],[{"start":{"row":87,"column":4},"end":{"row":87,"column":5},"action":"insert","lines":["l"],"id":12}],[{"start":{"row":87,"column":5},"end":{"row":87,"column":6},"action":"insert","lines":["e"],"id":13}],[{"start":{"row":87,"column":6},"end":{"row":87,"column":7},"action":"insert","lines":["."],"id":14}],[{"start":{"row":87,"column":7},"end":{"row":87,"column":8},"action":"insert","lines":["e"],"id":15}],[{"start":{"row":87,"column":7},"end":{"row":87,"column":8},"action":"remove","lines":["e"],"id":16},{"start":{"row":87,"column":7},"end":{"row":87,"column":14},"action":"insert","lines":["exports"]}],[{"start":{"row":87,"column":14},"end":{"row":87,"column":15},"action":"insert","lines":["."],"id":17}],[{"start":{"row":87,"column":15},"end":{"row":87,"column":37},"action":"insert","lines":["trafficLightSimulation"],"id":18}],[{"start":{"row":87,"column":37},"end":{"row":87,"column":38},"action":"insert","lines":[")"],"id":19}],[{"start":{"row":87,"column":37},"end":{"row":87,"column":38},"action":"remove","lines":[")"],"id":20}],[{"start":{"row":87,"column":37},"end":{"row":87,"column":38},"action":"insert","lines":[")"],"id":21}],[{"start":{"row":87,"column":37},"end":{"row":87,"column":38},"action":"remove","lines":[")"],"id":22}],[{"start":{"row":87,"column":37},"end":{"row":87,"column":38},"action":"insert","lines":["="],"id":23}],[{"start":{"row":87,"column":38},"end":{"row":87,"column":60},"action":"insert","lines":["trafficLightSimulation"],"id":24}],[{"start":{"row":72,"column":0},"end":{"row":74,"column":9},"action":"remove","lines":["//    sim.setLogger(function (str) {","//        document.write(str);","//    });"],"id":25},{"start":{"row":72,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":[" sim.setLogger(function (msg) {","      console.log(msg);","    });",""]}],[{"start":{"row":72,"column":1},"end":{"row":72,"column":4},"action":"insert","lines":["   "],"id":26}],[{"start":{"row":73,"column":23},"end":{"row":74,"column":0},"action":"insert","lines":["",""],"id":27},{"start":{"row":74,"column":0},"end":{"row":74,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":74,"column":5},"end":{"row":74,"column":6},"action":"remove","lines":[" "],"id":28}],[{"start":{"row":74,"column":4},"end":{"row":74,"column":5},"action":"remove","lines":[" "],"id":29}],[{"start":{"row":74,"column":0},"end":{"row":74,"column":4},"action":"remove","lines":["    "],"id":30}],[{"start":{"row":73,"column":23},"end":{"row":74,"column":0},"action":"remove","lines":["",""],"id":31}],[{"start":{"row":8,"column":9},"end":{"row":8,"column":31},"action":"remove","lines":["trafficLightSimulation"],"id":32},{"start":{"row":8,"column":9},"end":{"row":8,"column":31},"action":"insert","lines":["trafficLightSimulation"]}],[{"start":{"row":88,"column":60},"end":{"row":88,"column":61},"action":"insert","lines":[";"],"id":33}],[{"start":{"row":17,"column":24},"end":{"row":17,"column":25},"action":"insert","lines":[";"],"id":34}],[{"start":{"row":38,"column":5},"end":{"row":38,"column":6},"action":"remove","lines":[";"],"id":35}],[{"start":{"row":66,"column":5},"end":{"row":66,"column":6},"action":"remove","lines":[";"],"id":36}]]},"ace":{"folds":[],"customSyntax":"javascript","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":0},"end":{"row":3,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1479338423165,"hash":"152e748797c605222a87dd7122fddca4b0d082d6"}