{"changed":true,"filter":false,"title":"webpack.config.js","tooltip":"/client/webpack.config.js","value":"// Helper: root() is defined at the bottom\nvar path = require('path');\nvar webpack = require('webpack');\n\n// Webpack Plugins\nvar CommonsChunkPlugin = webpack.optimize.CommonsChunkPlugin;\nvar autoprefixer = require('autoprefixer');\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar CopyWebpackPlugin = require('copy-webpack-plugin');\nvar DashboardPlugin = require('webpack-dashboard/plugin');\nvar ForkCheckerPlugin = require('awesome-typescript-loader').ForkCheckerPlugin;\n\n/**\n * Env\n * Get npm lifecycle event to identify the environment\n */\nvar ENV = process.env.npm_lifecycle_event;\nvar isTestWatch = ENV === 'test-watch';\nvar isTest = ENV === 'test' || isTestWatch;\nvar isProd = ENV === 'build';\n\n\nif(isProd){\n    console.log(\"Is production\");\n}\nelse{\n  console.log(\"Env is: \"+ENV);\n}\n\n\nmodule.exports = function makeWebpackConfig() {\n    /**\n     * Config\n     * Reference: http://webpack.github.io/docs/configuration.html\n     * This is the object where all configuration gets set\n     */\n    var config = {};\n\n    /**\n     * Devtool\n     * Reference: http://webpack.github.io/docs/configuration.html#devtool\n     * Type of sourcemap to use per build type\n     */\n    if (isProd) {\n        config.devtool = 'source-map';\n    }\n    else if (isTest) {\n        config.devtool = 'inline-source-map';\n    }\n    else {\n        config.devtool = 'eval-source-map';\n    }\n\n    /**\n     * Entry\n     * Reference: http://webpack.github.io/docs/configuration.html#entry\n     */\n    config.entry = isTest ? {} : {\n        'polyfills' : './src/polyfills.ts',\n        'vendor'    : './src/vendor.ts',\n        'app'       : './src/main.ts' // our angular app\n    };\n\n    /**\n     * Output\n     * Reference: http://webpack.github.io/docs/configuration.html#output\n     */\n    config.output = isTest ? {} : {\n        path          : root('dist'),\n        publicPath    : isProd ? '/' : 'http://0.0.0.0:8080/',\n        filename      : isProd ? 'js/[name].[hash].js' : 'js/[name].js',\n        chunkFilename : isProd ? '[id].[hash].chunk.js' : '[id].chunk.js'\n    };\n\n    /**\n     * Resolve\n     * Reference: http://webpack.github.io/docs/configuration.html#resolve\n     */\n    config.resolve = {\n        // only discover files that have those extensions\n        extensions : ['.ts', '.js', '.json', '.css', '.scss', '.html'],\n    };\n\n    var atlOptions = '';\n    if (isTest && !isTestWatch) {\n        // awesome-typescript-loader needs to output inlineSourceMap for code coverage to work with source maps.\n        atlOptions = 'inlineSourceMap=true&sourceMap=false';\n    }\n\n    /**\n     * Loaders\n     * Reference: http://webpack.github.io/docs/configuration.html#module-loaders\n     * List: http://webpack.github.io/docs/list-of-loaders.html\n     * This handles most of the magic responsible for converting modules\n     */\n    config.module = {\n        rules : [\n            // Support for .ts files.\n            {\n                test    : /\\.ts$/,\n                loaders : ['awesome-typescript-loader?' + atlOptions, 'angular2-template-loader', '@angularclass/hmr-loader', 'angular2-router-loader'],\n                exclude : [isTest ? /\\.(e2e)\\.ts$/ : /\\.(spec|e2e)\\.ts$/, /node_modules\\/(?!(ng2-.+))/]\n            },\n\n            // copy those assets to output\n            {\n                test   : /\\.(png|jpe?g|gif|svg|woff|woff2|ttf|eot|ico)(\\?v=[0-9]\\.[0-9]\\.[0-9])?$/,\n                loader : 'file-loader?name=fonts/[name].[hash].[ext]?'\n            },\n\n            // Support for *.json files.\n            {test : /\\.json$/, loader : 'json-loader'},\n\n            // Support for CSS as raw text\n            // use 'null' loader in test mode (https://github.com/webpack/null-loader)\n            // all css in src/style will be bundled in an external css file\n            {\n                test    : /\\.css$/,\n                exclude : root('src', 'app'),\n                loader: isTest ? 'null-loader' : ExtractTextPlugin.extract({ fallbackLoader: 'style-loader', loader: ['css-loader', 'postcss-loader']})\n            },\n            // all css required in src/app files will be merged in js files\n            {test: /\\.css$/, include: root('src', 'app'), loader: 'raw-loader!postcss-loader'},\n\n            // support for .scss files\n            // use 'null' loader in test mode (https://github.com/webpack/null-loader)\n            // all css in src/style will be bundled in an external css file\n            {\n                test: /\\.(scss|sass)$/,\n                exclude : root('src', 'app'),\n                loader: isTest ? 'null-loader' : ExtractTextPlugin.extract({ fallbackLoader: 'style-loader', loader: ['css-loader', 'postcss-loader', 'sass-loader']})\n            },\n            // all css required in src/app files will be merged in js files\n            {test: /\\.(scss|sass)$/, exclude: root('src', 'style'), loader: 'raw-loader!postcss-loader!sass-loader'},\n\n            // support for .html as raw text\n            // todo: change the loader to something that adds a hash to images\n            {test: /\\.html$/, loader: 'raw-loader',  exclude: root('src', 'public')}\n        ]\n    };\n\n    if (isTest && !isTestWatch) {\n        // instrument only testing sources with Istanbul, covers ts files\n        config.module.rules.push({\n            test    : /\\.ts$/,\n            enforce : 'post',\n            include : path.resolve('src'),\n            loader  : 'istanbul-instrumenter-loader',\n            exclude : [/\\.spec\\.ts$/, /\\.e2e\\.ts$/, /node_modules/]\n        });\n    }\n\n    if (!isTest || !isTestWatch) {\n        // tslint support\n        config.module.rules.push({\n            test    : /\\.ts$/,\n            enforce : 'pre',\n            loader: 'tslint-loader'\n        });\n    }\n\n    /**\n     * Plugins\n     * Reference: http://webpack.github.io/docs/configuration.html#plugins\n     * List: http://webpack.github.io/docs/list-of-plugins.html\n     */\n    config.plugins = [\n        // Define env variables to help with builds\n        // Reference: https://webpack.github.io/docs/list-of-plugins.html#defineplugin\n        new webpack.DefinePlugin({\n            // Environment helpers\n            'process.env' : {\n                ENV : JSON.stringify(ENV)\n            }\n        }),\n\n        // Workaround needed for angular 2 angular/angular#11580\n        new webpack.ContextReplacementPlugin(\n            // The (\\\\|\\/) piece accounts for path separators in *nix and Windows\n            /angular(\\\\|\\/)core(\\\\|\\/)(esm(\\\\|\\/)src|src)(\\\\|\\/)linker/,\n            root('./src') // location of your src\n        ),\n\n        // Tslint configuration for webpack 2\n        new webpack.LoaderOptionsPlugin({\n            options : {\n                /**\n                 * Apply the tslint loader as pre/postLoader\n                 * Reference: https://github.com/wbuchwalter/tslint-loader\n                 */\n                tslint     : {\n                    emitErrors : false,\n                    failOnHint : false\n                },\n                /**\n                 * Sass\n                 * Reference: https://github.com/jtangelder/sass-loader\n                 * Transforms .scss files to .css\n                 */\n                sassLoader : {\n                    //includePaths: [path.resolve(__dirname, \"node_modules/foundation-sites/scss\")]\n                },\n                /**\n                 * PostCSS\n                 * Reference: https://github.com/postcss/autoprefixer-core\n                 * Add vendor prefixes to your css\n                 */\n                postcss    : [\n                    autoprefixer({\n                        browsers : ['last 2 version']\n                    })\n                ]\n            }\n        })\n    ];\n\n    if (!isTest && !isProd) {\n        config.plugins.push(new DashboardPlugin());\n    }\n\n    if (!isTest && !isTestWatch) {\n        config.plugins.push(\n            new ForkCheckerPlugin(),\n\n            // Generate common chunks if necessary\n            // Reference: https://webpack.github.io/docs/code-splitting.html\n            // Reference: https://webpack.github.io/docs/list-of-plugins.html#commonschunkplugin\n            new CommonsChunkPlugin({\n                name : ['vendor', 'polyfills']\n            }),\n\n            // Inject script and link tags into html files\n            // Reference: https://github.com/ampedandwired/html-webpack-plugin\n            new HtmlWebpackPlugin({\n                template       : './src/public/index.html',\n                chunksSortMode : 'dependency'\n            }),\n\n            // Extract css files\n            // Reference: https://github.com/webpack/extract-text-webpack-plugin\n            // Disabled when in test mode or not in build mode\n            new ExtractTextPlugin({filename : 'css/[name].[hash].css', disable : !isProd})\n        );\n    }\n\n    // Add build specific plugins\n    if (isProd) {\n        config.plugins.push(\n            // Reference: http://webpack.github.io/docs/list-of-plugins.html#noerrorsplugin\n            // Only emit files when there are no errors\n            new webpack.NoErrorsPlugin(),\n\n            // // Reference: http://webpack.github.io/docs/list-of-plugins.html#dedupeplugin\n            // // Dedupe modules in the output\n            // new webpack.optimize.DedupePlugin(),\n\n            // Reference: http://webpack.github.io/docs/list-of-plugins.html#uglifyjsplugin\n            // Minify all javascript, switch loaders to minimizing mode\n            new webpack.optimize.UglifyJsPlugin({sourceMap : true, mangle : {keep_fnames : true}}),\n\n            // Copy assets from the public folder\n            // Reference: https://github.com/kevlened/copy-webpack-plugin\n            new CopyWebpackPlugin([{\n                from : root('src/public')\n            }])\n        );\n    }\n\n    /**\n     * Dev server configuration\n     * Reference: http://webpack.github.io/docs/configuration.html#devserver\n     * Reference: http://webpack.github.io/docs/webpack-dev-server.html\n     */\n    config.devServer = {\n        contentBase        : './src/public',\n        historyApiFallback : true,\n        quiet              : true,\n        stats              : 'minimal' // none (or false), errors-only, minimal, normal (or true) and verbose\n    };\n\n    return config;\n}();\n\n// Helper functions\nfunction root(args) {\n    args = Array.prototype.slice.call(arguments, 0);\n    return path.join.apply(path, [__dirname].concat(args));\n}\n","undoManager":{"mark":72,"position":79,"stack":[[{"start":{"row":61,"column":47},"end":{"row":61,"column":56},"action":"remove","lines":["localhost"],"id":1},{"start":{"row":61,"column":47},"end":{"row":61,"column":48},"action":"insert","lines":["0"]}],[{"start":{"row":61,"column":48},"end":{"row":61,"column":49},"action":"insert","lines":["."],"id":2}],[{"start":{"row":61,"column":49},"end":{"row":61,"column":50},"action":"insert","lines":["0"],"id":3}],[{"start":{"row":61,"column":50},"end":{"row":61,"column":51},"action":"insert","lines":["."],"id":4}],[{"start":{"row":61,"column":51},"end":{"row":61,"column":52},"action":"insert","lines":["0"],"id":5}],[{"start":{"row":61,"column":52},"end":{"row":61,"column":53},"action":"insert","lines":["."],"id":6}],[{"start":{"row":61,"column":53},"end":{"row":61,"column":54},"action":"insert","lines":["0"],"id":7}],[{"start":{"row":266,"column":44},"end":{"row":267,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":267,"column":0},"end":{"row":267,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":267,"column":8},"end":{"row":267,"column":9},"action":"insert","lines":["h"],"id":9}],[{"start":{"row":267,"column":9},"end":{"row":267,"column":10},"action":"insert","lines":["o"],"id":10}],[{"start":{"row":267,"column":10},"end":{"row":267,"column":11},"action":"insert","lines":["t"],"id":11}],[{"start":{"row":267,"column":10},"end":{"row":267,"column":11},"action":"remove","lines":["t"],"id":12}],[{"start":{"row":267,"column":10},"end":{"row":267,"column":11},"action":"insert","lines":["s"],"id":13}],[{"start":{"row":267,"column":11},"end":{"row":267,"column":12},"action":"insert","lines":["t"],"id":14}],[{"start":{"row":267,"column":12},"end":{"row":267,"column":13},"action":"insert","lines":[":"],"id":15}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":14},"action":"insert","lines":["*"],"id":16}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":14},"action":"remove","lines":["*"],"id":17}],[{"start":{"row":267,"column":12},"end":{"row":267,"column":13},"action":"remove","lines":[":"],"id":18}],[{"start":{"row":267,"column":12},"end":{"row":267,"column":13},"action":"insert","lines":[":"],"id":19}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":14},"action":"insert","lines":["\\"],"id":20}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":14},"action":"remove","lines":["\\"],"id":21}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":14},"action":"insert","lines":["`"],"id":22},{"start":{"row":267,"column":14},"end":{"row":267,"column":15},"action":"insert","lines":["h"]}],[{"start":{"row":267,"column":15},"end":{"row":267,"column":16},"action":"insert","lines":["o"],"id":23}],[{"start":{"row":267,"column":16},"end":{"row":267,"column":17},"action":"insert","lines":["s"],"id":24}],[{"start":{"row":267,"column":17},"end":{"row":267,"column":18},"action":"insert","lines":["t"],"id":25}],[{"start":{"row":267,"column":17},"end":{"row":267,"column":18},"action":"remove","lines":["t"],"id":26}],[{"start":{"row":267,"column":16},"end":{"row":267,"column":17},"action":"remove","lines":["s"],"id":27}],[{"start":{"row":267,"column":15},"end":{"row":267,"column":16},"action":"remove","lines":["o"],"id":28}],[{"start":{"row":267,"column":14},"end":{"row":267,"column":15},"action":"remove","lines":["h"],"id":29}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":14},"action":"remove","lines":["`"],"id":30}],[{"start":{"row":267,"column":13},"end":{"row":267,"column":15},"action":"insert","lines":["''"],"id":31}],[{"start":{"row":267,"column":14},"end":{"row":267,"column":15},"action":"insert","lines":["0"],"id":32}],[{"start":{"row":267,"column":15},"end":{"row":267,"column":16},"action":"insert","lines":["."],"id":33}],[{"start":{"row":267,"column":16},"end":{"row":267,"column":17},"action":"insert","lines":["0"],"id":34}],[{"start":{"row":267,"column":17},"end":{"row":267,"column":18},"action":"insert","lines":["."],"id":35}],[{"start":{"row":267,"column":18},"end":{"row":267,"column":19},"action":"insert","lines":["0"],"id":36}],[{"start":{"row":267,"column":19},"end":{"row":267,"column":20},"action":"insert","lines":["."],"id":37}],[{"start":{"row":267,"column":20},"end":{"row":267,"column":21},"action":"insert","lines":["0"],"id":38}],[{"start":{"row":267,"column":22},"end":{"row":267,"column":23},"action":"insert","lines":[","],"id":39}],[{"start":{"row":266,"column":44},"end":{"row":267,"column":23},"action":"remove","lines":["","        host:'0.0.0.0',"],"id":40}],[{"start":{"row":61,"column":47},"end":{"row":61,"column":54},"action":"remove","lines":["0.0.0.0"],"id":41},{"start":{"row":61,"column":47},"end":{"row":61,"column":48},"action":"insert","lines":["l"]}],[{"start":{"row":61,"column":48},"end":{"row":61,"column":49},"action":"insert","lines":["o"],"id":42}],[{"start":{"row":61,"column":49},"end":{"row":61,"column":50},"action":"insert","lines":["c"],"id":43}],[{"start":{"row":61,"column":50},"end":{"row":61,"column":51},"action":"insert","lines":["a"],"id":44}],[{"start":{"row":61,"column":51},"end":{"row":61,"column":52},"action":"insert","lines":["l"],"id":45}],[{"start":{"row":61,"column":52},"end":{"row":61,"column":53},"action":"insert","lines":["h"],"id":46}],[{"start":{"row":61,"column":53},"end":{"row":61,"column":54},"action":"insert","lines":["o"],"id":47}],[{"start":{"row":61,"column":54},"end":{"row":61,"column":55},"action":"insert","lines":["s"],"id":48}],[{"start":{"row":61,"column":55},"end":{"row":61,"column":56},"action":"insert","lines":["t"],"id":49}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"insert","lines":["''"],"id":50}],[{"start":{"row":21,"column":1},"end":{"row":21,"column":2},"action":"remove","lines":["'"],"id":51}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"remove","lines":["'"],"id":52}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":53}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":54}],[{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":55}],[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":56}],[{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"remove","lines":["",""],"id":57}],[{"start":{"row":22,"column":0},"end":{"row":28,"column":1},"action":"insert","lines":["","if(isProd){","    console.log(\"Is production\");","}","else{","  console.log(ENV);","}"],"id":58}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"insert","lines":["I"],"id":59}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["S"],"id":60}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"remove","lines":["S"],"id":61}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"remove","lines":["I"],"id":62}],[{"start":{"row":27,"column":14},"end":{"row":27,"column":15},"action":"insert","lines":["\""],"id":63}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["\""],"id":64}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"insert","lines":["+"],"id":65}],[{"start":{"row":27,"column":15},"end":{"row":27,"column":16},"action":"insert","lines":["E"],"id":66}],[{"start":{"row":27,"column":16},"end":{"row":27,"column":17},"action":"insert","lines":["n"],"id":67}],[{"start":{"row":27,"column":17},"end":{"row":27,"column":18},"action":"insert","lines":["v"],"id":68}],[{"start":{"row":27,"column":18},"end":{"row":27,"column":19},"action":"insert","lines":[" "],"id":69}],[{"start":{"row":27,"column":19},"end":{"row":27,"column":20},"action":"insert","lines":["i"],"id":70}],[{"start":{"row":27,"column":20},"end":{"row":27,"column":21},"action":"insert","lines":["s"],"id":71}],[{"start":{"row":27,"column":21},"end":{"row":27,"column":22},"action":"insert","lines":[":"],"id":72}],[{"start":{"row":27,"column":22},"end":{"row":27,"column":23},"action":"insert","lines":[" "],"id":73}],[{"start":{"row":70,"column":47},"end":{"row":70,"column":56},"action":"remove","lines":["localhost"],"id":74},{"start":{"row":70,"column":47},"end":{"row":70,"column":48},"action":"insert","lines":["0"]}],[{"start":{"row":70,"column":48},"end":{"row":70,"column":49},"action":"insert","lines":["."],"id":75}],[{"start":{"row":70,"column":49},"end":{"row":70,"column":50},"action":"insert","lines":["0"],"id":76}],[{"start":{"row":70,"column":50},"end":{"row":70,"column":51},"action":"insert","lines":["."],"id":77}],[{"start":{"row":70,"column":51},"end":{"row":70,"column":52},"action":"insert","lines":["0"],"id":78}],[{"start":{"row":70,"column":52},"end":{"row":70,"column":53},"action":"insert","lines":["."],"id":79}],[{"start":{"row":70,"column":53},"end":{"row":70,"column":54},"action":"insert","lines":["0"],"id":80}]]},"ace":{"folds":[],"scrolltop":505.00007695622116,"scrollleft":0,"selection":{"start":{"row":70,"column":54},"end":{"row":70,"column":54},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":38,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1482656797731}