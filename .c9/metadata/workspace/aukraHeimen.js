{"filter":false,"title":"aukraHeimen.js","tooltip":"/aukraHeimen.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":7,"column":3},"end":{"row":7,"column":4},"action":"remove","lines":["s"],"id":15}],[{"start":{"row":7,"column":2},"end":{"row":7,"column":3},"action":"remove","lines":["a"],"id":16}],[{"start":{"row":7,"column":1},"end":{"row":7,"column":2},"action":"remove","lines":["l"],"id":17}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":1},"action":"remove","lines":["c"],"id":18}],[{"start":{"row":8,"column":0},"end":{"row":25,"column":22},"action":"insert","lines":[" class Base {","     ","    ","    ","    constructor(name=null){","        ","        ","        this.id  = uuid.v1();","        this.name = name;","    }","    ","    ","     ","     ","    }","    ","    ","module.exports = Base;"],"id":19}],[{"start":{"row":20,"column":5},"end":{"row":25,"column":22},"action":"remove","lines":["","     ","    }","    ","    ","module.exports = Base;"],"id":20}],[{"start":{"row":342,"column":0},"end":{"row":347,"column":22},"action":"insert","lines":["","     ","    }","    ","    ","module.exports = Base;"],"id":21}],[{"start":{"row":347,"column":17},"end":{"row":347,"column":21},"action":"remove","lines":["Base"],"id":22},{"start":{"row":347,"column":17},"end":{"row":347,"column":18},"action":"insert","lines":["D"]}],[{"start":{"row":347,"column":18},"end":{"row":347,"column":19},"action":"insert","lines":["e"],"id":23}],[{"start":{"row":347,"column":19},"end":{"row":347,"column":20},"action":"insert","lines":["m"],"id":24}],[{"start":{"row":347,"column":20},"end":{"row":347,"column":21},"action":"insert","lines":["o"],"id":25}],[{"start":{"row":8,"column":7},"end":{"row":8,"column":11},"action":"remove","lines":["Base"],"id":26},{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"insert","lines":["D"]}],[{"start":{"row":8,"column":8},"end":{"row":8,"column":9},"action":"insert","lines":["e"],"id":27}],[{"start":{"row":8,"column":9},"end":{"row":8,"column":10},"action":"insert","lines":["m"],"id":28}],[{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"insert","lines":["o"],"id":29}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":8},"action":"remove","lines":["function"],"id":30}],[{"start":{"row":31,"column":0},"end":{"row":31,"column":1},"action":"remove","lines":[" "],"id":31}],[{"start":{"row":14,"column":8},"end":{"row":16,"column":25},"action":"remove","lines":["","        this.id  = uuid.v1();","        this.name = name;"],"id":32},{"start":{"row":14,"column":8},"end":{"row":15,"column":0},"action":"insert","lines":["",""]},{"start":{"row":15,"column":0},"end":{"row":15,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":29,"column":0},"end":{"row":58,"column":1},"action":"remove","lines":["","logResult (ctx){","  ","  ","  const patAPop = ctx.getStatsByName(patientA);","  const aukraPatientPop = ctx.getStatsByName(aukraheimen);","  const lineStats = ctx.getBuilding(aukraheimen).getResource(beds).queue.report();","  const lineAvgSize = lineStats[0];","  const lineAvgduration = lineStats[1];","  ","  ","  ","  ctx.log(`Patient A`);","  ctx.log('');","  ctx.log(`Count patient A: ${patAPop.current()}`);","  ctx.log(`Deaths patient A: ${ctx.kpis.deathCountPatientA}`);","  ctx.log(`Deaths in line patient A: ${ctx.kpis.deathCountPatientAInLine}`);","  ","  ","  ctx.log('');","  ","  ","  ctx.log(`Aukraheimen:`);","  ctx.log('');","  ctx.log(`Count patients in total: ${aukraPatientPop.sizeSeries.count()}`);","  ctx.log(`Avg stay in aukraheimen: ${aukraPatientPop.durationSeries.average()}`);","  ctx.log(`Avg number in line: ${lineAvgSize}`);","  ctx.log(`Avg waiting time in line: ${lineAvgduration}`);","  ","}"],"id":33}],[{"start":{"row":19,"column":5},"end":{"row":19,"column":6},"action":"insert","lines":["r"],"id":34}],[{"start":{"row":19,"column":6},"end":{"row":19,"column":7},"action":"insert","lines":["u"],"id":35}],[{"start":{"row":19,"column":7},"end":{"row":19,"column":8},"action":"insert","lines":["n"],"id":36}],[{"start":{"row":19,"column":8},"end":{"row":19,"column":9},"action":"insert","lines":["/"],"id":37}],[{"start":{"row":19,"column":8},"end":{"row":19,"column":9},"action":"remove","lines":["/"],"id":38}],[{"start":{"row":19,"column":8},"end":{"row":19,"column":10},"action":"insert","lines":["()"],"id":39}],[{"start":{"row":19,"column":10},"end":{"row":19,"column":11},"action":"insert","lines":["{"],"id":40}],[{"start":{"row":19,"column":11},"end":{"row":21,"column":6},"action":"insert","lines":["","         ","     }"],"id":41}],[{"start":{"row":20,"column":9},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":21,"column":0},"end":{"row":21,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":21,"column":9},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":43},{"start":{"row":22,"column":0},"end":{"row":22,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":22,"column":9},"end":{"row":23,"column":0},"action":"insert","lines":["",""],"id":44},{"start":{"row":23,"column":0},"end":{"row":23,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":23,"column":9},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":45},{"start":{"row":24,"column":0},"end":{"row":24,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":24,"column":9},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":46},{"start":{"row":25,"column":0},"end":{"row":25,"column":9},"action":"insert","lines":["         "]}],[{"start":{"row":27,"column":0},"end":{"row":56,"column":1},"action":"insert","lines":["","logResult (ctx){","  ","  ","  const patAPop = ctx.getStatsByName(patientA);","  const aukraPatientPop = ctx.getStatsByName(aukraheimen);","  const lineStats = ctx.getBuilding(aukraheimen).getResource(beds).queue.report();","  const lineAvgSize = lineStats[0];","  const lineAvgduration = lineStats[1];","  ","  ","  ","  ctx.log(`Patient A`);","  ctx.log('');","  ctx.log(`Count patient A: ${patAPop.current()}`);","  ctx.log(`Deaths patient A: ${ctx.kpis.deathCountPatientA}`);","  ctx.log(`Deaths in line patient A: ${ctx.kpis.deathCountPatientAInLine}`);","  ","  ","  ctx.log('');","  ","  ","  ctx.log(`Aukraheimen:`);","  ctx.log('');","  ctx.log(`Count patients in total: ${aukraPatientPop.sizeSeries.count()}`);","  ctx.log(`Avg stay in aukraheimen: ${aukraPatientPop.durationSeries.average()}`);","  ctx.log(`Avg number in line: ${lineAvgSize}`);","  ctx.log(`Avg waiting time in line: ${lineAvgduration}`);","  ","}"],"id":47}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["",""],"id":48}],[{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":49}],[{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":50}],[{"start":{"row":61,"column":0},"end":{"row":65,"column":20},"action":"remove","lines":["","const aukraheimen = \"aukraheimen\";","const patientA = \"patientA\";","","const beds = \"beds\";"],"id":51}],[{"start":{"row":21,"column":9},"end":{"row":25,"column":20},"action":"insert","lines":["","const aukraheimen = \"aukraheimen\";","const patientA = \"patientA\";","","const beds = \"beds\";"],"id":52}],[{"start":{"row":71,"column":0},"end":{"row":345,"column":22},"action":"remove","lines":["","var model = {","   ","   ","   ","   onInit : ctx=>{","            ctx.kpis.countPatientA=0,","            ctx.kpis.deathCountPatientA =0;","            ctx.kpis.deathCountPatientAInLine =0;","       },","  ","  ","    simulation:{","      name:\"simulation\" ,","      plannedEvents : [","          ","          {","            name : \"recordStats\",","            start:{","                unit:\"days\",","                value:0, //(monday at 08:00)","              ","            },","            repeatInterval:{","                unit:\"days\",","                value:1, //(each day at 08:00)","              ","            },","            isSustained :true,","            action: (simulation,ctx)=>{","              ","              ","                //ctx.log(` Tot: ${ctx.users.size},     Building: ${ctx.getBuilding(aukraheimen).users.size},     Line: ${ctx.getBuilding(aukraheimen).getResource(beds).queue.size()},     Died: ${ctx.kpis.deathCountPatientA},     Died in line: ${ctx.kpis.deathCountPatientAInLine}`);","","              ","            }","             ","          }  ","          ","          ","          ","          ","        ],","    },","  ","  ","    buildings:[","      ","      {","        name:aukraheimen,","       ","      ","       ","        resources:[","          {","            name:beds,","            value:24,","            hasQueue:true,","          }","        ],","        ","        rooms:[","        ","          {","            ","            name:\"Fløy A\",","            capacity:12","          }, ","          ","          {","            ","            name:\"Fløy B\",","            capacity:12","            ","          }, ","          ","          {","            ","            name:\"Fløy C\",","            capacity:12","            ","          }","        ],","        ","        plannedEvents : [","          ","          {","            name : \"checkForNewPatients\",","            start:{","                unit:\"hours\",","                value:2*24+2, //(each wednesday at 10:00)","              ","            },","            repeatInterval:{","                unit:\"days\",","                value:14, //(each wednesday at 10:00)","              ","            },","            isSustained :true,","            action: (building,ctx)=>{","              //Here the administration checks to see if there is enough beds available in the queue to add users to the building","              const bedsResource= building.getResource(beds);","              ","              while(bedsResource.queue.size()>0 && building.users.size<bedsResource.value){","                  //pop from the patient line","                  var userFromLine = bedsResource.pop(ctx.sim.time());","                  ","                  ","                  ","                  userFromLine.isInPatientLine = false;","                  ","                  //Add to the hospital","                  //NBNBN Liker ikke at vi må hente entity","                  ctx.getEntityByName(aukraheimen).userEnterBuilding(userFromLine);","                logPopulation(ctx);","                  ","                  ","              }","              ","            }","             ","          }  ","          ","          ","          ","          ","        ],","        ","        ","        onUserEnterBuilding:(user,ctx)=>{","          ","        },","        onUserLeaveBuilding:(user,ctx)=>{","          ","        }","          ","      },","      ","      ","      ","      ","      ","    ],","  ","  ","    users:[","      ","        {","          name:\"patientA\",","          onCreation:(user,ctx)=>{","            ","            //enter the queue for hospital beds resource","            user.isInPatientLine = true;","              ctx.getBuilding(aukraheimen).getResource(beds).push(user,ctx.sim.time());","            ","            ","            logPopulation(ctx);","            ","          },","          onDisposal:(user,ctx)=>{","            if(user.isInPatientLine){","              //remove the patient from the patient line","              ctx.getBuilding(aukraheimen).getResource(beds).queue.remove(user,ctx.sim.time());","              ctx.kpis.deathCountPatientAInLine ++;","            }","            else{","              //remove the patient from the hospital","            ctx.kpis.deathCountPatientA ++;","              ctx.getEntityByName(aukraheimen).userLeaveBuilding(user);","            }","            ","            logPopulation(ctx);","          },","          ","          arrivalTime:{","            name:\"exponential\",","            unit:\"days\",","            param1:13","          },","          ","          disposalTime:{","            name:\"triangular\",","            unit:\"days\",","            param1:240,","            param2:380,","            param3:620","          },","          ","          randomEvents:[","            ","            {","              //The patient has an emergency, which needs to be treated immediately, but queued","              name:\"emergency\",","              isRandom:true,","              isSustained :false,","              distribution:{","                name:\"exponential\",","                param1: 10*60*24,","              },","              queueEvent: true,","              action:(user,ctx)=>{","                ","              }","              ","              ","            }  ","            ","            ","            ","          ]","        }","        ","        ","        ","        ","      ],","      ","      ","    ","      ","      ","      events:[","        {","          name:\"tryEnterHospital\"","        }  ","        ","        ","      ],","      ","      ","     ","      ","      ","      ","      ","      ","      ","      events:[","        ","        {","          name:\"enterHospital\"","        },","        {","          name:\"leaveHospital\"","        }","        ","      ],","      ","      ","      preferences:{","        seed:1234,","        simTime:365*60*24*2,","        logVerbose : false,","        logEvents:false","      }","  ","  ","  ","  ","  ","  ","};","","var logPopulation = function(ctx){","  ctx.logEvent(` Tot: ${ctx.users.size},     Building: ${ctx.getBuilding(aukraheimen).users.size},     Line: ${ctx.getBuilding(aukraheimen).getResource(beds).queue.size()},     Died: ${ctx.kpis.deathCountPatientA},     Died in line: ${ctx.kpis.deathCountPatientAInLine}`);","} ;","","","","var simulation = new ArchitectureSimulation(model);","","simulation.simulate();","","","logResult(simulation);"]}],[{"start":{"row":27,"column":9},"end":{"row":301,"column":22},"action":"insert","lines":["","var model = {","   ","   ","   ","   onInit : ctx=>{","            ctx.kpis.countPatientA=0,","            ctx.kpis.deathCountPatientA =0;","            ctx.kpis.deathCountPatientAInLine =0;","       },","  ","  ","    simulation:{","      name:\"simulation\" ,","      plannedEvents : [","          ","          {","            name : \"recordStats\",","            start:{","                unit:\"days\",","                value:0, //(monday at 08:00)","              ","            },","            repeatInterval:{","                unit:\"days\",","                value:1, //(each day at 08:00)","              ","            },","            isSustained :true,","            action: (simulation,ctx)=>{","              ","              ","                //ctx.log(` Tot: ${ctx.users.size},     Building: ${ctx.getBuilding(aukraheimen).users.size},     Line: ${ctx.getBuilding(aukraheimen).getResource(beds).queue.size()},     Died: ${ctx.kpis.deathCountPatientA},     Died in line: ${ctx.kpis.deathCountPatientAInLine}`);","","              ","            }","             ","          }  ","          ","          ","          ","          ","        ],","    },","  ","  ","    buildings:[","      ","      {","        name:aukraheimen,","       ","      ","       ","        resources:[","          {","            name:beds,","            value:24,","            hasQueue:true,","          }","        ],","        ","        rooms:[","        ","          {","            ","            name:\"Fløy A\",","            capacity:12","          }, ","          ","          {","            ","            name:\"Fløy B\",","            capacity:12","            ","          }, ","          ","          {","            ","            name:\"Fløy C\",","            capacity:12","            ","          }","        ],","        ","        plannedEvents : [","          ","          {","            name : \"checkForNewPatients\",","            start:{","                unit:\"hours\",","                value:2*24+2, //(each wednesday at 10:00)","              ","            },","            repeatInterval:{","                unit:\"days\",","                value:14, //(each wednesday at 10:00)","              ","            },","            isSustained :true,","            action: (building,ctx)=>{","              //Here the administration checks to see if there is enough beds available in the queue to add users to the building","              const bedsResource= building.getResource(beds);","              ","              while(bedsResource.queue.size()>0 && building.users.size<bedsResource.value){","                  //pop from the patient line","                  var userFromLine = bedsResource.pop(ctx.sim.time());","                  ","                  ","                  ","                  userFromLine.isInPatientLine = false;","                  ","                  //Add to the hospital","                  //NBNBN Liker ikke at vi må hente entity","                  ctx.getEntityByName(aukraheimen).userEnterBuilding(userFromLine);","                logPopulation(ctx);","                  ","                  ","              }","              ","            }","             ","          }  ","          ","          ","          ","          ","        ],","        ","        ","        onUserEnterBuilding:(user,ctx)=>{","          ","        },","        onUserLeaveBuilding:(user,ctx)=>{","          ","        }","          ","      },","      ","      ","      ","      ","      ","    ],","  ","  ","    users:[","      ","        {","          name:\"patientA\",","          onCreation:(user,ctx)=>{","            ","            //enter the queue for hospital beds resource","            user.isInPatientLine = true;","              ctx.getBuilding(aukraheimen).getResource(beds).push(user,ctx.sim.time());","            ","            ","            logPopulation(ctx);","            ","          },","          onDisposal:(user,ctx)=>{","            if(user.isInPatientLine){","              //remove the patient from the patient line","              ctx.getBuilding(aukraheimen).getResource(beds).queue.remove(user,ctx.sim.time());","              ctx.kpis.deathCountPatientAInLine ++;","            }","            else{","              //remove the patient from the hospital","            ctx.kpis.deathCountPatientA ++;","              ctx.getEntityByName(aukraheimen).userLeaveBuilding(user);","            }","            ","            logPopulation(ctx);","          },","          ","          arrivalTime:{","            name:\"exponential\",","            unit:\"days\",","            param1:13","          },","          ","          disposalTime:{","            name:\"triangular\",","            unit:\"days\",","            param1:240,","            param2:380,","            param3:620","          },","          ","          randomEvents:[","            ","            {","              //The patient has an emergency, which needs to be treated immediately, but queued","              name:\"emergency\",","              isRandom:true,","              isSustained :false,","              distribution:{","                name:\"exponential\",","                param1: 10*60*24,","              },","              queueEvent: true,","              action:(user,ctx)=>{","                ","              }","              ","              ","            }  ","            ","            ","            ","          ]","        }","        ","        ","        ","        ","      ],","      ","      ","    ","      ","      ","      events:[","        {","          name:\"tryEnterHospital\"","        }  ","        ","        ","      ],","      ","      ","     ","      ","      ","      ","      ","      ","      ","      events:[","        ","        {","          name:\"enterHospital\"","        },","        {","          name:\"leaveHospital\"","        }","        ","      ],","      ","      ","      preferences:{","        seed:1234,","        simTime:365*60*24*2,","        logVerbose : false,","        logEvents:false","      }","  ","  ","  ","  ","  ","  ","};","","var logPopulation = function(ctx){","  ctx.logEvent(` Tot: ${ctx.users.size},     Building: ${ctx.getBuilding(aukraheimen).users.size},     Line: ${ctx.getBuilding(aukraheimen).getResource(beds).queue.size()},     Died: ${ctx.kpis.deathCountPatientA},     Died in line: ${ctx.kpis.deathCountPatientAInLine}`);","} ;","","","","var simulation = new ArchitectureSimulation(model);","","simulation.simulate();","","","logResult(simulation);"],"id":54}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":5},"action":"remove","lines":["     "],"id":55}],[{"start":{"row":301,"column":0},"end":{"row":301,"column":1},"action":"insert","lines":["t"],"id":56}],[{"start":{"row":301,"column":1},"end":{"row":301,"column":2},"action":"insert","lines":["h"],"id":57}],[{"start":{"row":301,"column":2},"end":{"row":301,"column":3},"action":"insert","lines":["i"],"id":58}],[{"start":{"row":301,"column":3},"end":{"row":301,"column":4},"action":"insert","lines":["s"],"id":59}],[{"start":{"row":301,"column":4},"end":{"row":301,"column":5},"action":"insert","lines":["."],"id":60}],[{"start":{"row":21,"column":9},"end":{"row":25,"column":20},"action":"remove","lines":["","const aukraheimen = \"aukraheimen\";","const patientA = \"patientA\";","","const beds = \"beds\";"],"id":61}],[{"start":{"row":13,"column":8},"end":{"row":17,"column":20},"action":"insert","lines":["","const aukraheimen = \"aukraheimen\";","const patientA = \"patientA\";","","const beds = \"beds\";"],"id":62}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":64},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":65},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":14,"column":7},"end":{"row":17,"column":28},"action":"remove","lines":[" const aukraheimen = \"aukraheimen\";","        const patientA = \"patientA\";","        ","        const beds = \"beds\";"],"id":66}],[{"start":{"row":9,"column":5},"end":{"row":12,"column":28},"action":"insert","lines":[" const aukraheimen = \"aukraheimen\";","        const patientA = \"patientA\";","        ","        const beds = \"beds\";"],"id":67}],[{"start":{"row":8,"column":13},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":68},{"start":{"row":9,"column":0},"end":{"row":9,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":9,"column":5},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":69},{"start":{"row":10,"column":0},"end":{"row":10,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":10,"column":5},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":70},{"start":{"row":11,"column":0},"end":{"row":11,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":8},"action":"remove","lines":["    "],"id":71}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "],"id":72}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "],"id":73}],[{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"remove","lines":[" "],"id":74}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"remove","lines":[" "],"id":75}],[{"start":{"row":14,"column":4},"end":{"row":15,"column":8},"action":"remove","lines":["    ","        "],"id":76}],[{"start":{"row":12,"column":3},"end":{"row":14,"column":24},"action":"remove","lines":[" const aukraheimen = \"aukraheimen\";","    const patientA = \"patientA\";","    const beds = \"beds\";"],"id":77}],[{"start":{"row":17,"column":7},"end":{"row":19,"column":24},"action":"insert","lines":[" const aukraheimen = \"aukraheimen\";","    const patientA = \"patientA\";","    const beds = \"beds\";"],"id":78}],[{"start":{"row":17,"column":4},"end":{"row":17,"column":8},"action":"remove","lines":["    "],"id":79}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "],"id":80},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":78,"column":13},"end":{"row":78,"column":14},"action":"insert","lines":["t"],"id":81}],[{"start":{"row":78,"column":14},"end":{"row":78,"column":15},"action":"insert","lines":["h"],"id":82}],[{"start":{"row":78,"column":15},"end":{"row":78,"column":16},"action":"insert","lines":["i"],"id":83}],[{"start":{"row":78,"column":16},"end":{"row":78,"column":17},"action":"insert","lines":["s"],"id":84}],[{"start":{"row":78,"column":17},"end":{"row":78,"column":18},"action":"insert","lines":["."],"id":85}],[{"start":{"row":130,"column":55},"end":{"row":130,"column":56},"action":"insert","lines":["t"],"id":86}],[{"start":{"row":130,"column":56},"end":{"row":130,"column":57},"action":"insert","lines":["h"],"id":87}],[{"start":{"row":130,"column":57},"end":{"row":130,"column":58},"action":"insert","lines":["i"],"id":88}],[{"start":{"row":130,"column":58},"end":{"row":130,"column":59},"action":"insert","lines":["s"],"id":89}],[{"start":{"row":130,"column":59},"end":{"row":130,"column":60},"action":"insert","lines":["."],"id":90}],[{"start":{"row":142,"column":38},"end":{"row":142,"column":43},"action":"insert","lines":["this."],"id":91}],[{"start":{"row":182,"column":30},"end":{"row":182,"column":35},"action":"insert","lines":["this."],"id":92}],[{"start":{"row":191,"column":30},"end":{"row":191,"column":35},"action":"insert","lines":["this."],"id":93}],[{"start":{"row":197,"column":34},"end":{"row":197,"column":39},"action":"insert","lines":["this."],"id":94}],[{"start":{"row":191,"column":60},"end":{"row":191,"column":65},"action":"insert","lines":["this."],"id":95}],[{"start":{"row":182,"column":60},"end":{"row":182,"column":65},"action":"insert","lines":["this."],"id":96}],[{"start":{"row":293,"column":73},"end":{"row":293,"column":78},"action":"insert","lines":["this."],"id":97}],[{"start":{"row":293,"column":132},"end":{"row":293,"column":137},"action":"insert","lines":["this."],"id":98}],[{"start":{"row":293,"column":162},"end":{"row":293,"column":167},"action":"insert","lines":["this."],"id":99}],[{"start":{"row":314,"column":37},"end":{"row":314,"column":42},"action":"insert","lines":["this."],"id":100}],[{"start":{"row":315,"column":45},"end":{"row":315,"column":50},"action":"insert","lines":["this."],"id":101}],[{"start":{"row":316,"column":61},"end":{"row":316,"column":66},"action":"insert","lines":["this."],"id":102}],[{"start":{"row":316,"column":36},"end":{"row":316,"column":41},"action":"insert","lines":["this."],"id":103}],[{"start":{"row":84,"column":17},"end":{"row":84,"column":22},"action":"insert","lines":["this."],"id":104}],[{"start":{"row":17,"column":8},"end":{"row":17,"column":13},"action":"remove","lines":["const"],"id":105},{"start":{"row":17,"column":8},"end":{"row":17,"column":9},"action":"insert","lines":["t"]}],[{"start":{"row":17,"column":9},"end":{"row":17,"column":10},"action":"insert","lines":["h"],"id":106}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":["9"],"id":107}],[{"start":{"row":17,"column":11},"end":{"row":17,"column":12},"action":"insert","lines":["s"],"id":108}],[{"start":{"row":17,"column":11},"end":{"row":17,"column":12},"action":"remove","lines":["s"],"id":109}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"remove","lines":["9"],"id":110}],[{"start":{"row":17,"column":10},"end":{"row":17,"column":11},"action":"insert","lines":["i"],"id":111}],[{"start":{"row":17,"column":11},"end":{"row":17,"column":12},"action":"insert","lines":["s"],"id":112}],[{"start":{"row":17,"column":12},"end":{"row":17,"column":13},"action":"insert","lines":["."],"id":113}],[{"start":{"row":17,"column":13},"end":{"row":17,"column":14},"action":"remove","lines":[" "],"id":114}],[{"start":{"row":18,"column":8},"end":{"row":18,"column":14},"action":"remove","lines":["const "],"id":115},{"start":{"row":18,"column":8},"end":{"row":18,"column":13},"action":"insert","lines":["this."]}],[{"start":{"row":19,"column":8},"end":{"row":19,"column":14},"action":"remove","lines":["const "],"id":116},{"start":{"row":19,"column":8},"end":{"row":19,"column":13},"action":"insert","lines":["this."]}]]},"ace":{"folds":[],"scrolltop":4273,"scrollleft":0,"selection":{"start":{"row":19,"column":13},"end":{"row":19,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1481245083707,"hash":"dc02524bb2bcf81005c67293364b91c4be00d363"}